buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("io.swagger.codegen.v3:swagger-codegen:3.0.13")
    }
}

plugins {
    id 'org.springframework.boot' version '2.2.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'war'
}

apply plugin: 'base'

group = 'net.medrag'

import io.swagger.codegen.DefaultGenerator
import io.swagger.codegen.config.CodegenConfigurator

ext.apiPackage = 'net.medrag.SwaggerTests.api'
ext.modelPackage = 'net.medrag.SwaggerTests.model'
ext.swaggerFile = "${rootDir}/src/api/swagger-2.0.yml"
ext.targetDir = "${rootDir}"


clean.doFirst {
    delete("${rootDir}/src/main/java/net/medrag/SwaggerTests/api")
    delete("${rootDir}/src/main/java/net/medrag/SwaggerTests/model")
}

task generateApi {
    doLast {
        def config = new CodegenConfigurator()
        config.setLang("spring")
        config.setApiPackage(rootProject.apiPackage)            // Package to be used for the API interfaces
        config.setModelPackage(rootProject.modelPackage)        // Package to be used for the API models
        config.setInputSpec(rootProject.swaggerFile.toString()) // The swagger API file
        config.setOutputDir(targetDir.toString())
        config.setAdditionalProperties([
                'dateLibrary'  : 'java8', // Date library to use
                'useTags'      : 'true',  // Use tags for the naming
                'interfaceOnly': 'true'   // Generating the Controller API interface and the models only
        ])
        new DefaultGenerator().opts(config.toClientOptInput()).generate() // Executing the generation
    }
}
compileJava.dependsOn('generateApi')
group = 'net.medrag'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'io.springfox:springfox-swagger2:2.7.0'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}
